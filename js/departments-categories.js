// js/departments-categories.js
class DepartmentsManager {
    constructor() {
        console.log('üìä DepartmentsManager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    }

    // –ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
    async getAllDepartments() {
        return window.dataManager.getDepartments();
    }

    async createDepartment(departmentData) {
        return window.dataManager.createDepartment(departmentData);
    }

    async deleteDepartment(departmentId) {
        return window.dataManager.deleteDepartment(departmentId);
    }

    // –ö–∞—Ç–µ–≥–æ—Ä–∏–∏
    async getAllCategories() {
        const categories = window.dataManager.getCategories();
        const departments = window.dataManager.getDepartments();
        
        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–π –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
        return categories.map(category => {
            const department = departments.find(d => d.id === category.department_id);
            return {
                ...category,
                department_name: department ? department.name : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'
            };
        });
    }

    async getCategoriesByDepartment(departmentId) {
        const categories = window.dataManager.getCategoriesByDepartment(departmentId);
        const departments = window.dataManager.getDepartments();
        
        return categories.map(category => {
            const department = departments.find(d => d.id === category.department_id);
            return {
                ...category,
                department_name: department ? department.name : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'
            };
        });
    }

    async createCategory(categoryData) {
        return window.dataManager.createCategory(categoryData);
    }

    async deleteCategory(categoryId) {
        return window.dataManager.deleteCategory(categoryId);
    }
}

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
window.departmentsManager = new DepartmentsManager();